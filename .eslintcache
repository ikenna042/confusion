[{"/Users/mac/Desktop/Projects/coursera/react/confusion/src/index.js":"1","/Users/mac/Desktop/Projects/coursera/react/confusion/src/App.js":"2","/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/MenuComponent.js":"3","/Users/mac/Desktop/Projects/coursera/react/confusion/src/shared/dishes.js":"4","/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/DishdetailComponent.js":"5","/Users/mac/Desktop/Projects/coursera/react/confusion/src/reportWebVitals.js":"6","/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/MainComponent.js":"7","/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/HeaderComponent.js":"8","/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/FooterComponent.js":"9","/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/HomeComponent.js":"10","/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/ContactComponent.js":"11","/Users/mac/Desktop/Projects/coursera/react/confusion/src/shared/comments.js":"12","/Users/mac/Desktop/Projects/coursera/react/confusion/src/shared/leaders.js":"13","/Users/mac/Desktop/Projects/coursera/react/confusion/src/shared/promotions.js":"14","/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/AboutComponent.js":"15","/Users/mac/Desktop/Projects/coursera/react/confusion/src/redux/reducer.js":"16","/Users/mac/Desktop/Projects/coursera/react/confusion/src/redux/configureStore.js":"17"},{"size":649,"mtime":1610246111977,"results":"18","hashOfConfig":"19"},{"size":580,"mtime":1611295333097,"results":"20","hashOfConfig":"19"},{"size":1561,"mtime":1610436038307,"results":"21","hashOfConfig":"19"},{"size":1448,"mtime":1610430820812,"results":"22","hashOfConfig":"19"},{"size":2682,"mtime":1610914385872,"results":"23","hashOfConfig":"19"},{"size":362,"mtime":1609728599913,"results":"24","hashOfConfig":"19"},{"size":1969,"mtime":1611295854948,"results":"25","hashOfConfig":"19"},{"size":4944,"mtime":1611253198731,"results":"26","hashOfConfig":"19"},{"size":2589,"mtime":1610349913498,"results":"27","hashOfConfig":"19"},{"size":1071,"mtime":1610430533641,"results":"28","hashOfConfig":"19"},{"size":10909,"mtime":1611076221619,"results":"29","hashOfConfig":"19"},{"size":4118,"mtime":1610430839652,"results":"30","hashOfConfig":"19"},{"size":2345,"mtime":1610430886094,"results":"31","hashOfConfig":"19"},{"size":435,"mtime":1610430869777,"results":"32","hashOfConfig":"19"},{"size":4749,"mtime":1610816946946,"results":"33","hashOfConfig":"19"},{"size":399,"mtime":1611294733511,"results":"34","hashOfConfig":"19"},{"size":223,"mtime":1611295191034,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1jlyt4x",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"/Users/mac/Desktop/Projects/coursera/react/confusion/src/index.js",[],["80","81"],"/Users/mac/Desktop/Projects/coursera/react/confusion/src/App.js",["82","83"],"import { Component } from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\n\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/MenuComponent.js",[],["84","85"],"/Users/mac/Desktop/Projects/coursera/react/confusion/src/shared/dishes.js",[],["86","87"],"/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/DishdetailComponent.js",[],["88","89"],"/Users/mac/Desktop/Projects/coursera/react/confusion/src/reportWebVitals.js",[],"/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/MainComponent.js",["90"],"/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/HeaderComponent.js",["91"],"import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n         Button, Modal, ModalHeader, ModalBody, FormGroup, Input, Label, Form } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin() {\n        this.toggleModal();\n        alert('Username is '+ this.username.value + ' Passwords is ' \n        + this.password.value +  ' Remember is set to ' + this.remember.checked); \n    }\n\n    render() {\n        return(\n            <>\n                <Navbar dark expand=\"md\">\n                <div className=\"container\">\n                    <NavbarToggler onClick={this.toggleNav} />\n                <NavbarBrand className=\"mr-auto\" href=\"/\">\n                    <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Image Logo\" />\n                </NavbarBrand>\n                <Collapse isOpen={this.state.isNavOpen} navbar>\n                <Nav navbar>\n                    <NavItem>\n                        <NavLink className=\"nav-link\" to=\"/home\">\n                            <span className=\"fa fa-home fa-lg\"></span> Home\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className=\"nav-link\" to=\"/aboutus\">\n                            <span className=\"fa fa-info fa-lg\"></span> About Us\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className=\"nav-link\" to=\"/menu\">\n                            <span className=\"fa fa-list fa-lg\"></span> Menu\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink className=\"nav-link\" to=\"/contactus\">\n                            <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <Nav className=\"ml-auto\" navbar>\n                    <NavItem>\n                        <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                    </NavItem>\n                </Nav>\n                </Collapse>\n                </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\" \n                                    innerRef={(input) => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Header;","/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/FooterComponent.js",[],"/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/HomeComponent.js",[],"/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/ContactComponent.js",["92"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: '',\n            agree: false,\n            contactType: 'Tel.',\n            message: '',\n            touched: {\n                firstname: false,\n                lastname: false,\n                telnum: false,\n                email: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n    \n        this.setState({\n          [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        console.log('Current State is: ' + JSON.stringify(this.state));\n        alert('Current State is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n    }\n\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n    }\n\n    validate(firstname, lastname, telnum, email) {\n        const errors = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: ''\n        };\n\n        if (this.state.touched.firstname && firstname.length < 3) {\n            errors.firstname = 'Firstname should be >= 3 characters';\n        } else if (this.state.touched.firstname && firstname.length > 3) {\n            errors.firstname = 'First Name should be < 10 characters'\n        }\n\n        if (this.state.touched.lastname && lastname.length < 3) {\n            errors.lastname = 'Last name should be >= 3 characters';\n        } else if (this.state.touched.lastname && lastname.length > 3) {\n            errors.lastname = 'Last Name should be < 10 characters'\n        }\n\n        const reg = /^\\d+$/;\n        if (this.state.touched.telnum && !reg.test(telnum))\n            errors.telnum = 'Tel. Number should contain only numbers';\n\n        if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\n            errors.email = 'Email should contain the @ sign';\n\n        return errors;\n    }\n\n    render() {\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email)\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"./home\">Home</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Contact Us</h3>\n                            <hr />\n                        </div>\n                    </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        value={this.state.firstname}\n                                        valid={errors.firstname === ''}\n                                        invalid={errors.firstname !== ''}\n                                        onBlur={this.handleBlur('firstname')}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback> {errors.firstname} </FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        value={this.state.lastname}\n                                        valid={errors.lastname === ''}\n                                        invalid={errors.lastname !== ''}\n                                        onBlur={this.handleBlur('lastname')}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback> {errors.lastname} </FormFeedback>\n                                </Col>                        \n                            </FormGroup>\n                            <FormGroup row>\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. number\"\n                                        value={this.state.telnum}\n                                        valid={errors.telnum === ''}\n                                        invalid={errors.telnum !== ''}\n                                        onBlur={this.handleBlur('telnum')}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback> {errors.telnum} </FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        valid={errors.email === ''}\n                                        invalid={errors.email !== ''}\n                                        onBlur={this.handleBlur('email')}\n                                        onChange={this.handleInputChange} />\n                                    <FormFeedback> {errors.email} </FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 6, offset: 2}}>\n                                    <FormGroup check>\n                                        <Label check>\n                                            <Input type=\"checkbox\"\n                                                name=\"agree\"\n                                                checked={this.state.agree}\n                                                onChange={this.handleInputChange} /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </FormGroup>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Input type=\"select\" name=\"contactType\"\n                                            value={this.state.contactType}\n                                            onChange={this.handleInputChange}>\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        value={this.state.message}\n                                        onChange={this.handleInputChange}></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/mac/Desktop/Projects/coursera/react/confusion/src/shared/comments.js",[],["93","94"],"/Users/mac/Desktop/Projects/coursera/react/confusion/src/shared/leaders.js",[],["95","96"],"/Users/mac/Desktop/Projects/coursera/react/confusion/src/shared/promotions.js",[],"/Users/mac/Desktop/Projects/coursera/react/confusion/src/components/AboutComponent.js",["97"],"import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction RenderLeader(data) {\n    console.log(data);\n    return (\n            <Media>\n                {data.name}\n                <Media left top>\n                    <Media object data-src={data.image} alt={data.name} />\n                </Media>\n                <Media body>\n                    <Media heading>\n                        The heading here\n                        {/* {data.name} */}\n                    </Media>\n                    {data.description}\n                </Media>\n            </Media>\n    );\n}\nfunction About(props) {\n    console.log(props);\n    const leaders = props.leaders.map((leader) => {\n        return (\n            <div key={leader.id} className=\"row row-content\">\n                <div className=\"col-12 col-md-10\">\n                <Media>\n                <Media left top>\n                    <Media object src={leader.image} alt={leader.name} />\n                </Media>\n                <Media body>\n                    <Media heading>\n                        {leader.name}\n                    </Media>\n                    <p>{leader.designation}</p>\n                    {leader.description}\n                </Media>\n            </Media>\n                </div>\n                \n            </div>\n            \n        );\n    });\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div>\n                    {leaders}\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default About;","/Users/mac/Desktop/Projects/coursera/react/confusion/src/redux/reducer.js",[],"/Users/mac/Desktop/Projects/coursera/react/confusion/src/redux/configureStore.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":16},{"ruleId":"102","severity":1,"message":"106","line":2,"column":18,"nodeType":"104","messageId":"105","endLine":2,"endColumn":29},{"ruleId":"98","replacedBy":"107"},{"ruleId":"100","replacedBy":"108"},{"ruleId":"98","replacedBy":"109"},{"ruleId":"100","replacedBy":"110"},{"ruleId":"98","replacedBy":"111"},{"ruleId":"100","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":25,"column":3,"nodeType":"115","messageId":"116","endLine":27,"endColumn":4},{"ruleId":"117","severity":1,"message":"118","line":44,"column":21,"nodeType":"119","endLine":44,"endColumn":97},{"ruleId":"120","severity":1,"message":"121","line":120,"column":29,"nodeType":"119","endLine":120,"endColumn":71},{"ruleId":"98","replacedBy":"122"},{"ruleId":"100","replacedBy":"123"},{"ruleId":"98","replacedBy":"124"},{"ruleId":"100","replacedBy":"125"},{"ruleId":"102","severity":1,"message":"126","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":22},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'NavbarBrand' is defined but never used.",["127"],["128"],["127"],["128"],["127"],["128"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["127"],["128"],["127"],["128"],"'RenderLeader' is defined but never used.","no-global-assign","no-unsafe-negation"]